(this.webpackJsonpmalloc=this.webpackJsonpmalloc||[]).push([[0],{242:function(e,t,n){"use strict";n.r(t);var s=n(0),a=n.n(s),r=n(32),i=n.n(r),o=(n(42),n(6)),l=n(1),c=(n(43),n(244)),u=n(243),p=n(5);var m=function(e){var t=Object(s.useState)(""),n=Object(l.a)(t,2),r=n[0],i=n[1],o=Object(s.useState)(!1),m=Object(l.a)(o,2),y=m[0],d=m[1],b=Object(s.useState)(!1),f=Object(l.a)(b,2),h=f[0],v=f[1],$=Object(p.b)((function(){return{marginLeft:-10}})),g=Object(l.a)($,2),x=g[0].marginLeft;(0,g[1])({marginLeft:""!==r||y||h?0:-10});var w=Object(p.b)((function(){return{marginRight:10}})),T=Object(l.a)(w,2),E=T[0].marginRight;return(0,T[1])({marginRight:""!==r||y||h?0:10}),a.a.createElement("div",{className:"command-input-container"},a.a.createElement(p.a.div,{className:"command-input-arrow",style:{marginLeft:x,marginRight:E}},">"),a.a.createElement("div",{className:"command-input",onMouseEnter:function(){v(!0)},onMouseLeave:function(){v(!1)}},a.a.createElement("div",{className:"code-render"},a.a.createElement("span",{style:{opacity:.5}},a.a.createElement(c.a,{language:"c",style:u.a},e.getPrediction(r)))),a.a.createElement("div",{className:"code-render"},a.a.createElement(c.a,{language:"c",style:u.a},r)),a.a.createElement("input",{spellCheck:"false",value:r,onChange:function(e){i(e.currentTarget.value)},onFocus:function(){d(!0)},onBlur:function(){d(!1)},onKeyDown:function(t){if("Tab"!==t.key){if("Enter"===t.key){if(""===r)return;return e.onCommand(r),void i("")}}else{t.preventDefault();var n=e.getPrediction(r);i(n)}}})))};function y(e){return a.a.createElement("div",{className:"command-history-item ".concat(e.historyItem.style)},"command"!==e.historyItem.style?e.historyItem.text.replace(/ /g," ").split("\n").map((function(e,t){return a.a.createElement("span",{key:t},e,a.a.createElement("br",null))})):a.a.createElement("div",{className:"code-render"},a.a.createElement(c.a,{language:"c",style:u.a},e.historyItem.text)))}var d=function(e){var t=Object(s.useState)(0),n=Object(l.a)(t,2),r=n[0],i=n[1];return Object(s.useEffect)((function(){if(r!==e.history.length){i(e.history.length);var t=document.querySelector(".command-history-container");t.scrollTop=t.scrollHeight}}),[r,e.history.length]),a.a.createElement("div",{className:"command-history-container"},e.history.map((function(e,t){return a.a.createElement(y,{key:t,historyItem:e,index:t})})))};var b=function(e){var t=Object(s.useState)(200),n=Object(l.a)(t,2),r=n[0],i=n[1],o=Object(p.b)((function(){return{height:500,config:{mass:1,tension:540,friction:56}}})),c=Object(l.a)(o,2),u=c[0].height,y=c[1];return r!==e.height&&(i(e.height),y({height:e.height})),a.a.createElement(p.a.div,{className:"command-area",style:{height:u}},a.a.createElement(d,{history:e.commandHistory}),a.a.createElement(m,{getPrediction:e.getPrediction,onCommand:function(t){return e.onCommand(t)}}))};var f=function(e){return a.a.createElement("div",{className:"cell-container"+(e.cellState.isAllocated?" allocated":" unallocated")+(e.cellState.isReserved?" reserved":" unreserved")})};var h=function(e){return a.a.createElement("span",{className:"memory-block-container"},e.blockState.cells.map((function(e,t){return a.a.createElement(f,{key:t,cellState:e})})))};var v=function(e){return a.a.createElement("div",{className:"memory-container"},e.memState.blocks.map((function(e,t){return a.a.createElement(h,{key:t,blockState:e})})))},$=n(18),g=n.n($),x=n(2),w=n(4),T=function(){function e(){Object(x.a)(this,e),this.memorySize=3*Math.floor(document.querySelector("body").clientWidth/46),this.reset()}return Object(w.a)(e,[{key:"reset",value:function(){var e=this;this.state=[];for(var t=0;t<this.memorySize;t++)this.state.push({isAllocated:!1,isReserved:!1});this.state[0].isReserved=!0,this.variables={help:{nodeType:"variable",type:"function",value:function(){return'\n- Commands use C-style syntax.\n- Variable declaration and assignment is supported.\n- Intelligent live suggestions are provided. You can use tab to insert a suggestion.\n- The following functions are available:\n  - malloc(int)\n  - free(int)\n  - freeAll()\n  - coalesce()\n  - setMemorySize(int)\n  - sizeof(any)\n  - setAllocationMethod("best fit" | "worst fit" | "first fit")\n  - getAllocationMethod()\n  - reset()\n  - clearConsole()'}},reset:{nodeType:"variable",type:"function",value:function(){return e.reset(),{nodeType:"variable",type:"int",value:void 0}}},clearConsole:{nodeType:"variable",type:"function",value:function(){return{nodeType:"ui-action",action:"clearConsole"}}},malloc:{nodeType:"variable",type:"function",value:function(t){return{nodeType:"variable",type:"int",value:e.malloc(t)}}},free:{nodeType:"variable",type:"function",value:function(t){return e.free(t),{nodeType:"variable",type:"int",value:void 0}}},freeAll:{nodeType:"variable",type:"function",value:function(){for(var t=0;void 0!==t;)e.state[t].isAllocated&&e.free(t+1),t=e.state[t].cellValue;return{nodeType:"variable",type:"int",value:void 0}}},setMemorySize:{nodeType:"variable",type:"function",value:function(t){return e.setMemorySize(t),{nodeType:"variable",type:"int",value:void 0}}},coalesce:{nodeType:"variable",type:"function",value:function(t){return e.coalesce(),{nodeType:"variable",type:"int",value:void 0}}},sizeof:{nodeType:"variable",type:"function",value:function(e){if(void 0===e)throw new Error('Syntax error ("sizeof()"):\n  Expected 1 argument, got 0.');var t,n=e.type;if(void 0===n)throw new Error("This is a bug lol");switch(n){case"int":case"char":t=1;break;case"double":t=2;break;default:t=-1}return{nodeType:"variable",type:"string",value:t}}},setAllocationMethod:{nodeType:"variable",type:"function",value:function(t){if("best fit"===t||"worst fit"===t||"first fit"===t)return e.variables.currentAllocationMethod={nodeType:"variable",type:"string",value:t},{nodeType:"variable"};throw new Error('Runtime exception in setAllocationMethod(): Method is invalid.\n  Valid methods are "best fit", "worst fit", and "first fit".')}},getAllocationMethod:{nodeType:"variable",type:"function",value:function(){return e.variables.currentAllocationMethod}},currentAllocationMethod:{nodeType:"variable",type:"string",value:"first fit"},int:{nodeType:"type",type:"int"},double:{nodeType:"type",type:"double"},string:{nodeType:"type",type:"string"},char:{nodeType:"type",type:"char"}}}},{key:"getIdentifiers",value:function(){return Object.keys(this.variables)}},{key:"getFunctions",value:function(){var e=this;return Object.keys(this.variables).filter((function(t){return"function"===e.variables[t].type}))}},{key:"malloc",value:function(e){if("string"===typeof e&&(e=parseInt(e)),0===e)throw new Error("Runtime exception in malloc():\n  Size cannot be zero.");if(e<0)throw new Error("Runtime exception in malloc():\n  Size cannot be negative.");var t;switch(this.variables.currentAllocationMethod.value){case"first fit":for(var n=0;void 0!==n;){if(!this.state[n].isAllocated)if((this.state[n].cellValue?this.state[n].cellValue:this.state.length)-n-1>=e){t=n;break}n=this.state[n].cellValue}break;case"best fit":for(var s=this.state.length-1,a=0,r=0;void 0!==r;){var i=this.state[r].cellValue?this.state[r].cellValue:this.state.length;!this.state[r].isAllocated&&i-r-1<s&&(s=i-r-1,a=r),r=this.state[r].cellValue}e<=s&&(t=a);break;case"worst fit":for(var o=0,l=0,c=0;void 0!==c;){var u=this.state[c].cellValue?this.state[c].cellValue:this.state.length;!this.state[c].isAllocated&&u-c-1>o&&(o=u-c-1,l=c),c=this.state[c].cellValue}e<=o&&(t=l);break;default:throw new Error("Runtime exception in malloc():\n  Allocation method is invalid.\n  Hint: Don\t set currentAllocationMethod directly; instead, use setAllocationMethod().")}if(void 0===t)throw new Error("Runtime exception in malloc(): Out of memory.");for(var p=t;p<=t+e;p++)this.state[p].isAllocated=!0;this.state[t].isReserved=!0;var m=this.state[t].cellValue;return this.state[t].cellValue=t+e+1,this.state[t].cellValue>=this.state.length&&(this.state[t].cellValue=void 0),void 0===this.state[t+e+1]||this.state[t+e+1].isReserved||(this.state[t+e+1].isReserved=!0,this.state[t+e+1].cellValue=m),t+1}},{key:"free",value:function(e){if(void 0===this.state[e-1])throw new Error("Runtime exception in free():\n  Memory pointer is out of bounds.");if(!this.state[e-1].isReserved||!this.state[e-1].isAllocated)throw new Error("Runtime exception in free():\n  Memory pointer does not point to the start of an allocated chunk.");this.state[e-1].isAllocated=!1;for(var t=e;t<this.state.length&&!this.state[t].isReserved;t++)this.state[t].isAllocated=!1}},{key:"setMemorySize",value:function(e){if(e<1)throw new Error("Runtime exception in setMemorySize(): Memory size must be at least 1.");if(e!==this.memorySize){if(e>this.memorySize)for(var t=0;t<e-this.memorySize;t++)0===t&&this.state[this.memorySize-1].isAllocated?this.state.push({isAllocated:!1,isReserved:!0}):this.state.push({isAllocated:!1,isReserved:!1});else{this.state=this.state.slice(0,e);for(var n=this.state.size-1;n>=0;n--)if(this.state[n].isReserved){this.state[n].next=void 0;break}}this.memorySize=e}}},{key:"coalesce",value:function(){for(var e=0;!(e>=this.state.length)&&!(void 0===this.state[e].cellValue||this.state[e].cellValue<0||this.state[e].cellValue>=this.state.length);)if(this.state[e].isAllocated||this.state[this.state[e].cellValue].isAllocated)e=this.state[e].cellValue;else{var t=this.state[e].cellValue;this.state[e].cellValue=this.state[t].cellValue,this.state[t].cellValue=void 0,this.state[t].isReserved=!1}}},{key:"getState",value:function(){console.log(this.state);var e,t={};t.blocks=[];for(var n=!0,s=0;s<this.state.length;s++)n&&(void 0!==e&&t.blocks.push(e),(e={cells:[]}).isAllocated=this.state[s].isAllocated),e.cells.push(this.state[s]),n=s+1<this.state.length&&this.state[s+1].isReserved;return t.blocks.push(e),t}},{key:"evaluate",value:function(e){if(null===e||void 0===e)return{nodeType:"variable",value:void 0};if(Array.isArray(e)){if(0===e.length)throw new Error("Parsing error: Command is incomplete.\n  Did you forget a ')'?");return this.evaluate(e[0])}switch(e.nodeType){case"literal":return this.evaluate(e.literal);case"int":return e.int;case"char":return e.char;case"double":return e.double;case"string":return e.string;case"statement":return this.evaluate(e.statement);case"identifier":if(!this.variables.hasOwnProperty(e.identifier))throw new Error("Reference error: '".concat(e.identifier,"' is not defined."));return this.variables[e.identifier];case"assignment":var t,n;if("identifier"===e.left.nodeType){if(t=e.left.identifier,void 0===this.variables[t])throw new Error("Reference error: '".concat(t,"' is not defined."))}else"declaration"===e.left.nodeType&&(t=this.evaluate(e.left).identifier);if("literal"===e.right.nodeType)n=this.evaluate(e.right),n={nodeType:"variable",type:e.right.literal.nodeType,value:n};else n="variable"===e.right.nodeType?e.right:this.evaluate(e.right);if("variable"===n.nodeType){if(this.variables[t].type!==n.type)if("int"===this.variables[t].type&&"double"===n.type)this.variables[t].value=parseInt(n.value);else if("double"===this.variables[t].type&&"int"===n.type)this.variables[t].value=n.value;else{if(!this.variables[t].type.endsWith("*")&&"int"!==this.variables[t].type&&"char"!==this.variables[t].type||!n.type.endsWith("*")&&"int"!==n.type&&"char"!==n.type)throw new Error("Syntax error: Type mismatch between ".concat(this.variables[t].type," and ").concat(n.type,"."));this.variables[t].value=n.value}this.variables[t].value=n.value}else this.variables[t].type="int",this.variables[t].value=n;return n;case"functionCall":var s=this.evaluate(e.functionName);if("function"!==s.type)throw new Error("Type error: '".concat(e.functionName.identifier,"' is not a function."));var a=e.argument?this.evaluate(e.argument):void 0;return s.value(void 0!==a&&"variable"===a.nodeType?a.value:a);case"declaration":return this.evaluate(e.declaration);case"singleDeclaration":var r=this.evaluate(e.type),i=e.identifier.identifier;if(void 0!==this.variables[i])throw new Error("Syntax error: Identifier '".concat(i,"' has already been declared."));return this.variables[i]={nodeType:"variable",type:r,value:void 0},e.identifier;case"arrayDeclaration":throw new Error("Array logic is not supported yet.");case"cast":console.log(e);var o,l=this.evaluate(e.statement);switch(console.log(l),l.nodeType){case void 0:o=e.statement.literal.nodeType;break;case"variable":o=l.type,l=l.value;break;default:throw new Error('Whatever you just did is "not supported" (probably a bug).')}var c=[];if(e.type.type.endsWith("*"))c=["int*","double*","string*","char*","int","char","void*"];else switch(e.type.type){case"char":case"int":"double"===o&&(l=parseInt(l));case"double":c=["int","int*","double","double*","string*","char*","char","void*"]}if(!c.includes(o))throw new Error("Syntax error:\n  Type mismatch: Cannot cast from ".concat(o," to ").concat(e.type.type));return{nodeType:"variable",type:e.type.type,value:l};case"parenthesis":return this.evaluate(e.statement);case"operator":var u,p,m;if(u="literal"===e.left.nodeType?{nodeType:"variable",type:e.left.literal.nodeType,value:this.evaluate(e.left)}:this.evaluate(e.left),p="literal"===e.right.nodeType?{nodeType:"variable",type:e.right.literal.nodeType,value:this.evaluate(e.right)}:this.evaluate(e.right),void 0!==u.value){var y=u.type;u=u.value,"double"===y?u=parseFloat(u):"int"===y&&(u=parseInt(u))}if(void 0!==p.value){var d=p.type;p=p.value,"double"===d?p=parseFloat(p):"int"===d&&(p=parseInt(p))}if(typeof u!==typeof p)throw new Error("Syntax error: Type mismatch.");switch(e.operator){case"+":m=u+p;break;case"-":m=u-p;break;case"*":m=u*p;break;case"/":m=u/p}var b=typeof m;return"number"===b&&(b=m%1===0?"double":"int"),{nodeType:"variable",type:b,value:m};case"type":return e.type;case"arrayIndex":throw new Error("Array logic is not supported yet.");default:throw new Error("AST evaluator: Node type was not recognized.\n  This is a bug.")}}}]),e}(),E={Lexer:void 0,ParserRules:[{name:"Main$subexpression$1$subexpression$1",symbols:["statement","_"]},{name:"Main$subexpression$1",symbols:["Main$subexpression$1$subexpression$1"]},{name:"Main$subexpression$1$subexpression$2",symbols:["statement","_",{literal:";",pos:18}]},{name:"Main$subexpression$1",symbols:["Main$subexpression$1$subexpression$2"]},{name:"Main",symbols:["Main$subexpression$1"],postprocess:function(e){return e[0][0][0]}},{name:"statement$subexpression$1",symbols:["literal"]},{name:"statement$subexpression$1",symbols:["identifier"]},{name:"statement$subexpression$1",symbols:["assignment"]},{name:"statement$subexpression$1",symbols:["functionCall"]},{name:"statement$subexpression$1",symbols:["declaration"]},{name:"statement$subexpression$1",symbols:["cast"]},{name:"statement$subexpression$1",symbols:["array_index"]},{name:"statement$subexpression$1",symbols:["operator"]},{name:"statement$subexpression$1",symbols:["parenthesis"]},{name:"statement$subexpression$1",symbols:["_"]},{name:"statement",symbols:["statement$subexpression$1"],postprocess:function(e){return e[0][0]}},{name:"int$ebnf$1",symbols:[/[0-9]/]},{name:"int$ebnf$1",symbols:[/[0-9]/,"int$ebnf$1"],postprocess:function(e){return[e[0]].concat(e[1])}},{name:"int",symbols:["int$ebnf$1"],postprocess:function(e){return{nodeType:"int",int:e[0].join().replace(/,/g,"")}}},{name:"double$ebnf$1",symbols:[/[0-9]/]},{name:"double$ebnf$1",symbols:[/[0-9]/,"double$ebnf$1"],postprocess:function(e){return[e[0]].concat(e[1])}},{name:"double$ebnf$2",symbols:[]},{name:"double$ebnf$2",symbols:[/[^']/,"double$ebnf$2"],postprocess:function(e){return[e[0]].concat(e[1])}},{name:"double",symbols:["double$ebnf$1",{literal:".",pos:86},"double$ebnf$2"],postprocess:function(e){return{nodeType:"double",double:e[0].join().replace(/,/g,"")+"."+e[2].join().replace(/,/g,"")}}},{name:"string$ebnf$1",symbols:[]},{name:"string$ebnf$1",symbols:[/[^"]/,"string$ebnf$1"],postprocess:function(e){return[e[0]].concat(e[1])}},{name:"string",symbols:[{literal:'"',pos:97},"string$ebnf$1",{literal:'"',pos:102}],postprocess:function(e){return{nodeType:"string",string:e[1].join().replace(/,/g,"")}}},{name:"char",symbols:[{literal:"'",pos:110},/[^']/,{literal:"'",pos:114}],postprocess:function(e){return{nodeType:"char",char:e[1]}}},{name:"literal$subexpression$1",symbols:["int"]},{name:"literal$subexpression$1",symbols:["double"]},{name:"literal$subexpression$1",symbols:["string"]},{name:"literal$subexpression$1",symbols:["char"]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:function(e){return{nodeType:"literal",literal:e[0][0]}}},{name:"identifier$ebnf$1",symbols:[]},{name:"identifier$ebnf$1",symbols:[/[a-zA-Z0-9_]/,"identifier$ebnf$1"],postprocess:function(e){return[e[0]].concat(e[1])}},{name:"identifier",symbols:[/[a-zA-Z_]/,"identifier$ebnf$1"],postprocess:function(e){return{nodeType:"identifier",identifier:(e[0]+e[1]).replace(/,/g,"")}}},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:[/[ ]/,"_$ebnf$1"],postprocess:function(e){return[e[0]].concat(e[1])}},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"assignment$subexpression$1",symbols:["declaration"]},{name:"assignment$subexpression$1",symbols:["identifier"]},{name:"assignment$subexpression$1",symbols:["array_index"]},{name:"assignment",symbols:["assignment$subexpression$1","_",{literal:"=",pos:178},"_","statement"],postprocess:function(e){return{nodeType:"assignment",left:e[0][0],right:e[4]}}},{name:"functionCall",symbols:["identifier","_",{literal:"(",pos:194},"_","statement","_",{literal:")",pos:202}],postprocess:function(e){return{nodeType:"functionCall",functionName:e[0],argument:e[4]}}},{name:"declaration$subexpression$1",symbols:["single_declaration"]},{name:"declaration$subexpression$1",symbols:["array_declaration"]},{name:"declaration",symbols:["declaration$subexpression$1"],postprocess:function(e){return{nodeType:"declaration",declaration:e[0][0]}}},{name:"single_declaration$subexpression$1",symbols:["type","_","identifier"]},{name:"single_declaration",symbols:["single_declaration$subexpression$1"],postprocess:function(e){return{nodeType:"singleDeclaration",type:e[0][0],identifier:e[0][2]}}},{name:"array_declaration",symbols:["type","_","identifier","_",{literal:"[",pos:246},"_","int","_",{literal:"]",pos:254}],postprocess:function(e){return{nodeType:"arrayDeclaration",type:e[0],identifier:e[2],size:e[6]}}},{name:"array_index",symbols:["identifier","_",{literal:"[",pos:266},"_","statement","_",{literal:"]",pos:274}],postprocess:function(e){return{nodeType:"arrayIndex",identifier:e[0],value:e[4]}}},{name:"type$subexpression$1$string$1",symbols:[{literal:"i"},{literal:"n"},{literal:"t"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$1"]},{name:"type$subexpression$1$string$2",symbols:[{literal:"i"},{literal:"n"},{literal:"t"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$2","_",{literal:"*",pos:291}]},{name:"type$subexpression$1$string$3",symbols:[{literal:"d"},{literal:"o"},{literal:"u"},{literal:"b"},{literal:"l"},{literal:"e"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$3"]},{name:"type$subexpression$1$string$4",symbols:[{literal:"d"},{literal:"o"},{literal:"u"},{literal:"b"},{literal:"l"},{literal:"e"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$4","_",{literal:"*",pos:303}]},{name:"type$subexpression$1$string$5",symbols:[{literal:"s"},{literal:"t"},{literal:"r"},{literal:"i"},{literal:"n"},{literal:"g"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$5"]},{name:"type$subexpression$1$string$6",symbols:[{literal:"c"},{literal:"h"},{literal:"a"},{literal:"r"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$6"]},{name:"type$subexpression$1$string$7",symbols:[{literal:"c"},{literal:"h"},{literal:"a"},{literal:"r"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$7","_",{literal:"*",pos:319}]},{name:"type$subexpression$1$string$8",symbols:[{literal:"v"},{literal:"o"},{literal:"i"},{literal:"d"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$8"]},{name:"type$subexpression$1$string$9",symbols:[{literal:"v"},{literal:"o"},{literal:"i"},{literal:"d"}],postprocess:function(e){return e.join("")}},{name:"type$subexpression$1",symbols:["type$subexpression$1$string$9","_",{literal:"*",pos:331}]},{name:"type",symbols:["type$subexpression$1"],postprocess:function(e){return{nodeType:"type",type:e[0].length>1?e[0][0]+e[0][2]:e[0][0]}}},{name:"cast",symbols:[{literal:"(",pos:340},"_","type","_",{literal:")",pos:348},"_","statement"],postprocess:function(e){return{nodeType:"cast",type:e[2],statement:e[6]}}},{name:"operator$subexpression$1",symbols:["literal"]},{name:"operator$subexpression$1",symbols:["identifier"]},{name:"operator$subexpression$1",symbols:["functionCall"]},{name:"operator$subexpression$1",symbols:["parenthesis"]},{name:"operator$subexpression$2",symbols:["literal"]},{name:"operator$subexpression$2",symbols:["identifier"]},{name:"operator$subexpression$2",symbols:["functionCall"]},{name:"operator$subexpression$2",symbols:["parenthesis"]},{name:"operator",symbols:["operator$subexpression$1","_",/[+\-*/]/,"_","operator$subexpression$2"],postprocess:function(e){return{nodeType:"operator",left:e[0][0],operator:e[2],right:e[4][0]}}},{name:"parenthesis",symbols:[{literal:"(",pos:404},"statement",{literal:")",pos:408}],postprocess:function(e){return{nodeType:"parenthesis",statement:e[1]}}}],ParserStart:"Main"};var S=function(e){var t=Object(s.useState)(500),n=Object(l.a)(t,2),r=n[0],i=n[1],c=Object(s.useState)(!1),u=Object(l.a)(c,2),p=u[0],m=u[1],y=Object(s.useState)([]),d=Object(l.a)(y,2),f=d[0],h=d[1],$=Object(s.useState)([]),x=Object(l.a)($,2),w=x[0],S=x[1];return void 0===window.engine&&(window.engine=new T,S(window.engine.getState())),0===f.length&&h([{style:"info",text:"-> Type help() for usage."}]),a.a.createElement("div",{className:"App",style:{cursor:p?"ns-resize":void 0},onMouseMove:function(e){if(p){var t=document.querySelector("body").clientHeight,n=t-e.pageY;n<250?n=250:n>4*t/7&&(n=4*t/7),i(n-=3)}},onMouseUp:function(){m(!1)}},a.a.createElement("div",{className:"mainContent",style:{flex:1}},a.a.createElement(v,{memState:w})),a.a.createElement("div",{className:"spacer",onMouseDown:function(){m(!0)},style:{height:6}}),a.a.createElement(b,{height:r,commandHistory:f,getPrediction:function(e){var t=e.split(" "),n=t[t.length-1],s=e.split("("),a=s[s.length-1];if(""===n||""===a)return e;var r=window.engine.getIdentifiers(),i=window.engine.getFunctions(),o=["malloc","free","setMemorySize","sizeof","setAllocationMethod"].map((function(e){return e+"("})).concat(["help","reset","clearConsole","coalesce","getAllocationMethod","freeAll"].map((function(e){return e+"()"}))).concat(r.filter((function(e){return!i.includes(e)})));o=o.sort();var l=!0,c=!1,u=void 0;try{for(var p,m=o[Symbol.iterator]();!(l=(p=m.next()).done);l=!0){var y=p.value;if(y.startsWith(n))return t[t.length-1]=y,t.join(" ");if(y.startsWith(a))return s[s.length-1]=y,s.join("(")}}catch(d){c=!0,u=d}finally{try{l||null==m.return||m.return()}finally{if(c)throw u}}return e},onCommand:function(e){var t=[];t.push({style:"command",text:e});var n=new g.a.Parser(g.a.Grammar.fromCompiled(E)),s=!1;try{n.feed(e.trim())}catch(r){s=!0,t.push({style:"error",text:r.message.slice(0,r.message.search("Instead, ")).replace(/line [0-9]+ /,"")})}if(!s)try{var a=window.engine.evaluate(n.results);if(S(window.engine.getState()),void 0!==a&&""!==a.toString())if("variable"===a.nodeType)a=a.value;else if("identifier"===a.nodeType)a=void 0;else if("ui-action"===a.nodeType){if("clearConsole"===a.action)return void h([]);throw new Error("Internal error: Unsupported UI action.")}void 0===a&&(a="null"),t.push({style:"info",text:"-> ".concat(a.toString())})}catch(r){t.push({style:"error",text:r.message})}h([].concat(Object(o.a)(f),t))}}))};i.a.render(a.a.createElement(S,null),document.getElementById("root"))},37:function(e,t,n){e.exports=n(242)},42:function(e,t,n){},43:function(e,t,n){}},[[37,1,2]]]);
//# sourceMappingURL=main.283c20d9.chunk.js.map